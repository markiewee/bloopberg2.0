import pytest
from parseargs import Parseargs

def test_valid_arguments():
    """
    Test that valid arguments are parsed correctly.
    """
    parser = Parseargs()
    list_arguments = parser.parse_arguments()
    
    # Check if the parsed arguments match the expected values
    assert isinstance(list_arguments[0], list), "Tickers should be a list"
    assert list_arguments[1] == '20200117', "Start date should be '20200117'"
    assert list_arguments[2] is None, "End date should be None"
    assert list_arguments[3] == 'M', "Strategy1_type should be 'M'"
    assert list_arguments[4] == 'R', "Strategy2_type should be 'R'"
    assert list_arguments[5] == 10, "Days1 should be 10"
    assert list_arguments[6] == 100, "Days2 should be 100"
    assert list_arguments[7] == 10, "Top_pct should be 10"

def test_invalid_strategy():
    """
    Test that an invalid strategy type raises a SystemExit.
    """
    with pytest.raises(SystemExit):
        Parseargs(['--tickers', 'AAPL,MSFT,KO', '--b', '20200117', '--strategy1_type', 'X', '--strategy2_type', 'R', '--days1', '10', '--days2', '100', '--top_pct', '10'])

def test_invalid_date():
    """
    Test that an invalid date raises a SystemExit.
    """
    with pytest.raises(SystemExit):
        Parseargs(['--tickers', 'AAPL,MSFT,KO', '--b', '20201517', '--strategy1_type', 'M', '--strategy2_type', 'R', '--days1', '10', '--days2', '100', '--top_pct', '10'])
